//generated by lazy
//author: seanlan
/**
//表结构
type BaseStruct struct {
	Package    string    //包名
	StructName string    //结构名
	TableName  string    //表名
	Members    []*Member //成员
}

// 字段结构
type Member struct {
	Name          string    //字段名
	Type          string    //字段类型
	NewType       string    //新字段类型
	ColumnName    string    //字段列名
	ColumnComment string    //字段注释
	ModelType     string    //字段模型类型
	JSONTag       string    //json tag
	GORMTag       string    //gorm tag
	NewTag        string    //新tag
}
*/

package sqlmodel

const TableNameConversation = "conversation"

var ConversationColumns = struct {
	AppID            FieldBase
	ConversationID   FieldBase
	ConversationType FieldBase
	CreateAt         FieldBase
	ID               FieldBase
}{
	AppID:            FieldBase{"`app_id`"},
	ConversationID:   FieldBase{"`conversation_id`"},
	ConversationType: FieldBase{"`conversation_type`"},
	CreateAt:         FieldBase{"`create_at`"},
	ID:               FieldBase{"`id`"},
}

type Conversation struct {
	AppID            string `json:"app_id" gorm:"column:app_id;type:varchar(128);not null"`                  //应用APPID
	ConversationID   string `json:"conversation_id" gorm:"column:conversation_id;type:varchar(56);not null"` //会话ID
	ConversationType int32  `json:"conversation_type" gorm:"column:conversation_type;type:tinyint;not null"` //会话类型 1单聊 2会话
	CreateAt         int64  `json:"create_at" gorm:"column:create_at;type:bigint;not null"`                  //创建时间
	ID               uint64 `json:"id" gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true"`  //
}

// TableName Conversation's table name
func (*Conversation) TableName() string {
	return TableNameConversation
}
